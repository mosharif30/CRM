import Head from "next/head";
import { ChangeEvent, FormEvent, useState } from "react";
import axios from "axios";
import { useRouter } from "next/router";
interface Address {
  city: string;
  street: string;
  alley: string;
}
interface FormData {
  name: string;
  phone: string;
  age: number | "";
  email: string;
  address: Address;
}
export default function Home() {
  const router = useRouter();
  const [formData, setFormData] = useState<FormData>({
    name: "",
    age: "",
    phone: "",
    email: "",
    address: { city: "", street: "", alley: "" },
  });
  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {
    const { name, value } = e.target;
    if (name.startsWith("address.")) {
      const addressField = name.split(".")[1];
      setFormData((prevData) => ({
        ...prevData,
        address: {
          ...prevData.address,
          [addressField]: value,
        },
      }));
    } else {
      setFormData((prevData) => ({ ...prevData, [name]: value }));
    }
  };
  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {
    e.preventDefault();

    console.log(formData);
    axios
      .post("/api/users", formData)
      .then((res) => {
        console.log(res);
        setFormData({
          name: "",
          age: "",
          phone: "",
          email: "",
          address: {
            city: "",
            street: "",
            alley: "",
          },
        });
      })
      .catch((error) => {
        console.log(error.response);
      })
      .finally(() => {
        console.log("end");
      });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <h1>Beautiful Form</h1>
        <form className="form" onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="name">Name:</label>
            <input
              type="text"
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="age">Age:</label>
            <input
              type="number"
              id="age"
              name="age"
              value={formData.age}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="phone">Phone:</label>
            <input
              type="tel"
              id="phone"
              name="phone"
              value={formData.phone}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="email">Email:</label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              required
            />
          </div>
          <label>Address details: </label>
          <div className="address-box">
            <div className="form-group ">
              <label htmlFor="city">City:</label>
              <input
                type="text"
                id="city"
                name="address.city"
                value={formData.address.city}
                onChange={handleChange}
                required
              />
            </div>
            <div className="form-group ">
              <label htmlFor="street">Street:</label>
              <input
                type="text"
                id="street"
                name="address.street"
                value={formData.address.street}
                onChange={handleChange}
                required
              />
            </div>
            <div className="form-group ">
              <label htmlFor="alley">Alley:</label>
              <input
                type="text"
                id="alley"
                name="address.alley"
                value={formData.address.alley}
                onChange={handleChange}
                required
              />
            </div>
          </div>

          <button type="submit">Submit</button>
        </form>
        <button onClick={() => router.push("/users")}>Show all users</button>
      </div>
    </>
  );
}
